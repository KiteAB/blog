[{"categories":null,"content":"入坑Arch，主要方便自己查询和刚入坑经常玩挂的朋友，其他发行版应该大同小异 Linux上主要的备份方式 我知道的有 dd 和 tar 相比来说 tar打包显得比较灵活，可以用于本机备份恢复，也可以恢复到其他计算机，打包的目录可以完全按自己需要。这里主要介绍tar打包以及本机的恢复。 tar打包 可以只打包不压缩，速度会比较快，但是你可能会面对一个 好几十G的系统备份包，并不推荐。 压缩 可以用gzip或者Bzip2 （好像还有其他的，不熟悉，就不做介绍了） 二者相比，gzip速度相对较快，但压缩比率比Bzip2略低。 我这里并不用这两个软件打包，因为两个都是单线程，打包速度会非常慢。。。曾经用bzip2打包等到天荒地老都没好。。。 那么重头戏来了！ 偶然的机会知道了一个叫pigz的多线程压缩软件，采用与gzip相同的压缩方式，默认以逻辑CPU的个数的线程进行压缩，具体线程还可以自定义，速度飞快，详细可以百度 pigz。 那么 tar能不能调用pigz进行压缩呢？ 答案是肯定的！ 看一下tar的man手册 -I, --use-compress-program=COMMAND Filter data through COMMAND. It must accept the -d option, for decompression. The argument can contain command line Options. 发现tar是可以指定其他压缩程序进行压缩的。 于是直接 sudo pacman -S pigz 安装（arch官方源就有）下面就可以开始打包了！ 进入根目录 然后执行： sudo tar --use-compress-program=pigz -cvpf arch-backup.tgz --exclude=/proc --exclude=/lost+found --exclude=/arch-backup.tgz --exclude=/mnt --exclude=/sys --exclude=/run/media / 简单介绍一下命令，–use-compress-program=pigz 是用pigz压缩，arch-backup.tgz是打包之后的文件名，–exclude=/xxx是打包时排除的目录，这里简单的排除了一些不需要的目录，具体排除的内容可以根据自己的发行版和需要设定，–exclude=/arch-backup.tgz 是排除根目录下的自身，因为我是在根目录下进行的操作，如果不排除自身的话，打包可能会进入一个死循环。。。你可能会打出一个巨型包。 这样就开始进行压缩打包了 用htop 可以看到 CPU满载，大概3-5分钟左右完成，比起单线程10%多的占用 速度快了不知道多少倍！ 完成候可以看到 28G左右的分区 打包完 是一个15G的压缩包，个头还是很大。。。也算可以接受。。不知道有没有其他办法能够再小点 打包完成后，你可能会看到一条错误信息，具体原因小白不懂，不过并没有什么影响。然后将备份的包放到一个你觉得安全的地方。 至此，所有备份工作都已经完成，系统挂了可以用下面的方法恢复 首先需要准备一个能够引导的liveCD的U盘 进入liveCD之后 先用wifi-menu联网，因为liveCD上没有pigz，如果不想解压恢复的时候用半年的话就联网装上再解压吧 Ping一下百度看看是否联网成功，之后简单配置下源 就可以安装pigz了 sudo nano /etc/pacman.d/mirrorlist 配置源 安装pigz 要用到的pigz准备好之后就可以挂载磁盘 进行恢复了。 lsblk简单看下各个分区情况 我这里sdc1是boot分区 sdc2是/分区 sdb3是保存备份的分区 直接新建了一个目录挂载 sdb3 mkdir /f mount /dev/sdb3 /f 然后挂载 目标linux根分区到/mnt目录， 我的arch只分了 boot和/分区，并且备份的时候 忘记排除boot目录了，所以这里索性都挂载上干掉。挂载之后如图 现在就可以干掉已经损坏的系统了 rm -rf /mnt/* 命令很危险，一定要看清楚，想清楚了之后再执行，我真是怕小手一抖就把不想干掉的分区干掉了 这里zsh提示是否确定干掉/mnt上的所有文件 直接y boot目录因为是分区挂载点提示设备忙，这个目录并没有被删掉，不过ls一下可以看见/mnt下只剩boot目录，/mnt/boot下所有的引导文件也都没有了 万事俱备，下面进行解压恢复 还是使用pigz进行多线程解压 #tar –use-compress-program=pigz -xvpf /f/sysbackup/arch-backup-20160331.tgz -C /mnt 这里自行把备份路径替换掉。接下来就是解压过程如图： 用不了多久 也就2-3分钟 解压完成！(ssd) ls看看 干掉的文件是不是都回来了呢 OK，問題ない！ 到这里，恢复工作已经接近尾声，还记得备份的时候排除掉的目录么，重建排除的目录 然后直接reboot重启 前面干掉了 / 分区所有文件真的 大丈夫？ 重启之后 可爱的grub菜单出现了！ 因为我之前把boot一起干掉了，所以看到这里就表面恢复成功了！ 所有备份恢复工作全部完成！ 总结起来，主要是利用了 pigz 的多线程提高 压缩解压的效率，比普通的gzip或者bzip2快很多！缺点还是比较明显，就是备份的包个头略大，不知道怎么能够再小点 而且我只涉及了本机恢复，如果恢复到其他机子，还涉及到fstab修改之类的一些收尾工作。 抛砖引玉，如果有其他好的方法 欢迎交流！ 作者：baby_blue_ 链接：https://www.jianshu.com/p/b03a51c682a5 来源：简书 ","date":"2020-08-21","objectID":"/arch-backup-forward/:0:0","series":null,"tags":["备份","还原","arch","linux","archlinux","转载"],"title":"Arch 上的备份还原","uri":"/arch-backup-forward/#"},{"categories":null,"content":"2020 的我的常用软件 ","date":"2020-07-10","objectID":"/arch-software/:0:0","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#"},{"categories":null,"content":" 编辑篇","date":"2020-07-10","objectID":"/arch-software/:1:0","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#编辑篇"},{"categories":null,"content":" NeoVim对于我来说，编辑器 NeoVim，帮助乌干达儿童，没得选 (滑稽) 说回正题，NeoVim 是一个代码兼文本编辑器，它是 Vim 的衍生版，不过 NeoVim 的启动速度更快，自定义性更高，还有 NeoVim 独占的插件 并且，最重要的是，这个软件在命令行下运行，也就是说，我想做一个编辑，只需要输一行命令，也不用打开图形化界面，直接就能开始编辑！ 当然，使不使用 NeoVim 是你自己的自由，主要看你的工作环境是不是常在终端下，以及你能否习惯 Vim 家族的逻辑方式 (NORMAL, INSERT, VISUAL 模式等)，如果能，那么你可以尝试一下 NeoVim！ NeoVim 和 Vim 都拥有自己的图形化界面，也就是 GTK/QT 版，但我个人认为特意打开图形化界面，除非 NeoVim 能做到像 Emacs 那样，进入就不用再切出来，否则将会降低工作效率！ ","date":"2020-07-10","objectID":"/arch-software/:1:1","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#neovim"},{"categories":null,"content":" Geditgedit 是一款图形化的文本编辑器，是 GNOME 默认的文本编辑器，不过我很少用它。类似产品还有 KDE 自带的 Kate，不用的原因是过于臃肿 小声 BB: 其实用它只是因为在 MC 里输入不了中文用它输入在粘贴进去而已 XD ","date":"2020-07-10","objectID":"/arch-software/:1:2","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#gedit"},{"categories":null,"content":" 监视类","date":"2020-07-10","objectID":"/arch-software/:2:0","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#监视类"},{"categories":null,"content":" HtopInfo: 就不说 Top 了，那玩意现在基本没人用了 Htop 是一款全能的系统监视软件，虽然有点丑，但是监视得还是比较全面了，也能做些杀程操作啥的 ","date":"2020-07-10","objectID":"/arch-software/:2:1","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#htop"},{"categories":null,"content":" BashTopBashTop 是一款非常好看且实用的监控软件，它不仅能监视 CPU、内存、硬盘等占用情况，还能监控单个进程的运行情况、占用等！ ","date":"2020-07-10","objectID":"/arch-software/:2:2","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#bashtop"},{"categories":null,"content":" 截图类","date":"2020-07-10","objectID":"/arch-software/:3:0","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#截图类"},{"categories":null,"content":" FlameshotFlameshot，中文名火焰截图，是一款在 Linux 上使用的截屏工具，在截图后也可以进行编辑操作，可以说是 Linux 版的 Snipaste！ ","date":"2020-07-10","objectID":"/arch-software/:3:1","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#flameshot"},{"categories":null,"content":" ScrotScrot 是一个命令行独占的万能截图工具，如果不在后面传参的话默认截取全屏，文件格式默认为 png，可以通过 scrot -h 或 man scrot 获取帮助 (上面 Flameshot 的截图就是 Scrot 截的) ","date":"2020-07-10","objectID":"/arch-software/:3:2","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#scrot"},{"categories":null,"content":" 其它类","date":"2020-07-10","objectID":"/arch-software/:4:0","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#其它类"},{"categories":null,"content":" Google ChromeChrome 浏览器，必备，就是内存占用有点高 ","date":"2020-07-10","objectID":"/arch-software/:4:1","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#google-chrome"},{"categories":null,"content":" FehFeh 是一个图片查看软件，当然，也可以用它来指定图片切换壁纸，操作为仅命令行 ","date":"2020-07-10","objectID":"/arch-software/:4:2","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#feh"},{"categories":null,"content":" mpvmpv 是一个音视频播放软件，当然，也可以把它调教好做图片查看器，但是不推荐，操作命令行独占 ","date":"2020-07-10","objectID":"/arch-software/:4:3","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#mpv"},{"categories":null,"content":" LazygitLazygit 是一个 Git 的懒人版本，有在终端的 “UI”，支持自定义快捷键 以上便是我所有日常使用的软件，dwm 与 st 忽略不计 你可以在我的 GitHub 上找到以上大多数软件的配置 我的 GitHub 地址可以在本站的右上角找到 ","date":"2020-07-10","objectID":"/arch-software/:4:4","series":null,"tags":["软件","推荐","linux","arch","常用"],"title":"Arch Linux 常用软件","uri":"/arch-software/#lazygit"},{"categories":null,"content":"这篇文章介绍了我是怎么从 QWERTY 转到 Colemak 的 ","date":"2020-07-09","objectID":"/colemak/:0:0","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#"},{"categories":null,"content":" 最开始的时候第一次听说 Colemak 是从 CW 的视频里，虽然在此之前已经听说过了世界上有其他的键盘布局，但还是没想到一个非 QWERTY 的键盘布局能是这样的： 然后我就想尝试一下通过 KDE 家的 ktouch 来练习并日常使用 Colemak，那时候我用的是 KDE，但是 CW 视频里所讲的切换键盘布局方法是用 xmodmap，结果我的 KDE 直接就崩掉了 /笑哭 所以我就抛弃了很长一段时间的 Colemak ","date":"2020-07-09","objectID":"/colemak/:1:0","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#最开始的时候"},{"categories":null,"content":" 一次 “小转折”第二次是在一个很很很很很很很很很很很无聊的下午，我实在没事干 突然，我就想起了 Colemak 这回事 那时候我在用 i3wm，但是因为有 fcitx 这个输入法框架，它会很频繁的执行 setxkbmap us，也就是切换成 QWERTY 的指令，我当时不知道解决这个问题，又不能抛弃 fcitx，所以就再一次放弃了。这个问题直到我用 dwm 初期的时候都没解决 ","date":"2020-07-09","objectID":"/colemak/:2:0","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#一次-小转折"},{"categories":null,"content":" 终于正式入坑直到大概 6.23 的时候，这个问题才被我解解决 ","date":"2020-07-09","objectID":"/colemak/:3:0","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#终于正式入坑"},{"categories":null,"content":" 解决方案： 确保安装了 fcitx-configtool 这个包 右击托盘中的 fcitx 图标，点击 Configure (中文的本地化显示的应该是 配置 ) 在 Input Method 菜单中选中 Keyboard - English (US) 一项，点击左下角的 - 删除该输入方法 接着点击 + 新建一个输入方法，取消勾选 Only Show Current Language，然后找到 Keyboard - English (US) - English (Colemak)，点击 OK 按钮添加当前输入方法 选中 Colemak 输入方法并点击下面的 ^ 按键将 Colemak 移至顶部 如果还需中文输入 Colemak，请选中中文输入法的输入方法，点击右下角的齿轮，找到 Colemak 选中并点击 OK 即可 这就是我所找到的 fcitx 用户的 Colemak 解决方案 解决问题后，我便着手开始学习 Colemak，现在已经到了比较熟练的境界了 ","date":"2020-07-09","objectID":"/colemak/:3:1","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#解决方案"},{"categories":null,"content":" 其他","date":"2020-07-09","objectID":"/colemak/:4:0","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#其他"},{"categories":null,"content":" 一些建议 不要使用第三方练习软件！！！直接换上实践就是最好的学习方法，只要两周左右即可上手 不要中途放弃，这样不仅会使你不熟练 Colemak，而且在前段时间学习 Colemak 时已经不太熟练 QWERTY，简单来说，就是两个键盘布局的输入速度都会下降！ ","date":"2020-07-09","objectID":"/colemak/:4:1","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#一些建议"},{"categories":null,"content":" 疑惑解答 Q: 学习新的键盘布局有什么好处？ A: 最坏的情况也就是输入速度甚至比 QWERTY 稍慢，但我认为换来了输入手感，还是值得的 Q: 我使用了 Vim/Emacs, Lazygit 等终端工具，切换键盘布局会使快捷键输入变得困难许多，怎么办？ A：可以用别人的 Colemak 配置文件，也可以自己改配置 Q：我在手机上使用的输入法不能改键盘布局，而且我使用的是二十六键，怎么办？ A: 建议不仅不要减少手机输入法使用频率，还要让手机输入与电脑输入的量平衡，这样等练成了后你就有了一手 “自由切换EZ” 的技能，用别人电脑并已熟练 Colemak 时也不会大幅度降低 QWERTY 输入速度 Q: 别人或者家人要用我的电脑怎么办？ A：给他切回 QWERTY 用呗，等用完了再换回 Colemak 如果经常有切换键盘布局的需要的话还是不要尝试 Colemak 了 (除非要用你电脑的是个熊孩子，这种直接拒绝就好 2333) 以上便是我用 Colemak 的所有体验，并且我希望你能在看完这篇博文后，不要一心想着换 Colemak，得先思考这个键盘布局适不适合你，然后再做决定，不然你就会体会到类似于一些建议中的第二条一样的痛苦 233 ","date":"2020-07-09","objectID":"/colemak/:4:2","series":null,"tags":["colemak","日常"],"title":"Colemak 学习笔记","uri":"/colemak/#疑惑解答"},{"categories":null,"content":" 这是我的第一篇博文 本博客使用 Hugo 引擎进行搭建","date":"2020-06-14","objectID":"/hello-world/:0:1","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#这是我的第一篇博文"},{"categories":null,"content":" 这是我的第一篇博文 本博客使用 Hugo 引擎进行搭建","date":"2020-06-14","objectID":"/hello-world/:0:1","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#本博客使用-hugo-引擎进行搭建"},{"categories":null,"content":" Test Part #include \u003ciostream\u003e int main() { cout \u003c\u003c \"Hello, World!\" \u003c\u003c endl; return 0; } ","date":"2020-06-14","objectID":"/hello-world/:1:0","series":null,"tags":null,"title":"Hello World","uri":"/hello-world/#test-part"},{"categories":null,"content":"今天为大家带来一些Catmario TAS（或者说叫NAS）的教程，希望大家也能使用TAS的方法打出让人惊讶的视频与记录！ ","date":"2019-04-07","objectID":"/catmario-tas/:0:0","series":null,"tags":["tas","catmario","猫里奥","转载"],"title":"CatMario TAS 教程","uri":"/catmario-tas/#"},{"categories":null,"content":" 本文章转自@快乐mario的百度贴吧账号 首先，打一个TAS至少要具备以下几点要求 有充足的时间 有对电脑操作的基本技巧 有对TAS是什么的认识 有对Catmario的理解与热爱 有一定耐心与恒心 有一个XP系统 具备这一些，打一个TAS就是很简单的事情了。 【注意】这里的几点都是很重要的！最重要的是必须有 [XP] 系统！ 首先，我们要下载一个工具，名字叫Hourglass。这里提供给大家的是Hourglass-r71的汉化版本，我们就用这个来做Catmario的TAS。我们还需要Catmario的游戏文件。请点击下面的地址下载Hourglass模拟器和Catmario游戏，解压缩到合适的地方。 点我下载模拟器以及游戏文件 解压缩后可以看到TAS的文件夹，打开后里面有两个文件夹，一个是Catmario，一个是Hourglass。我们要打开的是Hourglass文件夹里的“模拟器”文件。 打开以后看到这样的画面，按图示操作 然后Hourglass会自动在Hourglass文件夹内创造同名的wtf录像文件，这个录像文件是纪录按键用的，也就是等下你打TAS时每一帧记录按键的文件。 下面以【最速】TAS为例，给大家介绍TAS教程，首先要进行一系列的设置： 选择好“游戏可执行程序”为我们的Catmario游戏以后，点击【运行库】→【区码模拟】→【强制日文区码】，这样可以解决TAS黑屏的问题。 点击【运行库】→【信息同步模式】→【同步】，这样可以解决一些突然退出的问题，但是有时退出也是难免的。 在【每秒帧数】栏中，把【60】帧改为【30】帧，这样可以防止延迟帧（Lag）的出现。 在【系统时间】栏中，把【6000】改为【0】，这样可以方便系统时间的校对。 点击【输入】→【配置快捷键】，找到并点击【单帧步进（第2个）】，查看是否为Space，如果不是Space，点击【设定…】然后按下【空格键】。 这样差不多就可以了，但是如果你在游戏途中（倒着的飞鱼出现时）崩溃（Crash）了，请再选择【声音】→【禁止DirectSound创建】，这样可以解决Crash的问题。（一般情况下不要选择，不然会没有声音） 接下来就是开始录制TAS录像的时候了，先来试验一下，点击【运行并录制新录像】，你会看到Catmario游戏窗口跳出，像往常一样先玩一会吧！ 【注意】有时候腾讯等软件会误报注入信息，请点击更多操作→允许此程序所有操作，如果不注入按键怎么玩游戏啊，这种低级的误报真是奇怪！ 玩的差不多了，点击【停止运行】，然后点击【运行并播放现有录像】，你会发现，你刚刚的所有操作都像是被录下来了一样又回放了一遍！而且是在真正的游戏窗口中回放的哦，这就是因为模拟器把你刚刚所有的按键全部记录到【录像文件】里面去了，而且时间非常的精确，不会有差错哦~ 注意，每次打开Hourglass都要重新设定上面的内容 其实这个软件何止只有这么点功能，他还有很多强大的功能，我们来体验一下。 按【运行并录制新录像】重新录制，一般他会提示是否重复录制[record over]该录像？意思就是你现在重新录制的话，会把之前的按键操作覆盖掉，如果你不希望被覆盖掉，就点击取消，然后给录像文件换一个名字（本来是…\\しょぼんのアクション.wtf，你可以换成速通.wtf或者其他）然后运行并录制新录像。 这时，你可以在任何时候，点击模拟器右边的“暂停”，你会发现，游戏居然停住了！然后，你可以敲击一下空格键，你又会发现，整个游戏只动了一点点！这是因为模拟器把游戏一秒钟的操作分配到了30帧，所以你就可以做很精确的操作了！ 比如这样~ 比如这样~ 厉害吧！还有更厉害的呢，你可以在任何时候按 Shift + 1 来保存一个存档，然后当你玩着玩着突然死了以后，按下 1 ，你会发现：游戏又从你保存的地方开始了！ 【注意】一共有20个存档，0-9 和 F1-F10 ，存档要加Shift，读档不用，9的存档对应F10的读档 【温馨提示】如果你一个录像要录制很多天的话，你可以在任何时候，按【运行并播放现有录像】，按【shift+数字】存档，再点击Hourglass窗口的【读写权限】，然后按【数字】读档就可以继续录制！ 前面展示的就是Hourglass的基本功能：按键记录、加速（快进）与减速、暂停、即时存档与读档（S\\L 大法）而这些基本是普通的游戏不能做到的。 接下来说明一下按键文件转AVI录像的功能，选择【AVI】→【捕捉视频+音频】，然后点击【运行并播放现有录像】，会提示保存AVI录像文件在哪里，选择好以后就开始播放录像，在合适的时候停止运行，你会发现AVI录像文件已经保存好了，帧率都不变，非常高清！但是文件大小比较大，推荐用岛国的软件 TMPGEnc 4.0 压缩，也可以用Winrar或者2345好压打成压缩包~ 前面已经把Hourglass大部分基础的内容讲完了，但是实际上这款模拟器还有一个强大又是必备的功能：内存搜索与监视！内存搜索就不教大家了，这里我把我亲自搜索整理出来的内存值分享给大家。首先点击Hourglass的【工具】→【内存监视】，跳出这样一个框框 在这个框框中按【添加】 打开的窗口中按上图输入地址、注释，选择数据大小后确定 用同样的方法添加以下内容 0060331C 横坐标 00603320 纵坐标 00603330 横速度（-800~800） 00603334 纵速度（-1600~1600） 00603336 上升判定1，下降判定 000603364 踩地判定1，跳起判定0 其实真正打速通的话，我们要用的仅仅是第3个和第4个，有时会用到第6个！添加好这6个内存值后，点击文件→保存，这样下次用模拟器就可以直接打开！ 然后不要关这个内存监视，你再去录一下看看~是不是感觉非常高级！ 好，有了这两个，我们就开始速通录像的录制吧！ 首先当然是调整好帧数和系统时间及其他设置，然后先点击【暂停】，按下【运行并录制新录像】后马上按住Enter！如果你第8帧就进入了黑屏画面，说明一开始你的速度是最快的！ 这时候你就要按住右，然后用空格键步进，确保你开始你就在加速！ 可以看到画面刚出现，你的横速度已经达到了80，这就是TAS方法之一：黑屏加速法！ TAS方法之二：边缘起跳与边缘落脚法如果我们想要让TAS变得更快，那么我们就要让它多加速一会，所以当然要加速到最边缘再起跳！值得一提的是，Catmario的【起跳判定】特别坑，它是计算你z按键的次数，如果是双数的话就可以起跳，如果是单数的话就不能起跳- - （前一帧已经按下z，单数不起跳） （又按了一帧z，双数起跳） 边缘落脚：即使你没有真正踩到地板，由于边缘判定的bug，也会上去！ （啊我要掉下去了~~~） （哇，我竟然跳上来了喵！） TAS方法之三：二段跳、斜角穿墙、纵向穿墙 这应该是Catmario TAS 中最吸引人的部分了！让人无法理解的是，穿墙的判定条件真是奇怪得让人无语：不需要速度快（纵向穿墙），也不需要准确的按键，甚至你根本就不知道哪一个点可以卡墙！！所以，卡墙与穿墙真的是靠运气的事情，下面给大家截取几个样本图： ① 横速度 -709，猫与墙距离4像素，斜角穿墙 ② 横速度 734，猫与墙距离3像素，二段跳 ③ 横速度 717，猫与墙距离4像素，斜角穿墙 ④ 横速度 761，猫与墙距离6像素，斜角穿（隐形砖）墙 ⑤ 横速度 717，猫与墙距离4像素，二段跳 ⑥ 横速度 634，猫与墙距离4像素，二段跳 ⑦ 横速度-534，纵速度800，猫与墙距离4像素，二段跳 ⑧ 横速度800，纵速度633，猫与墙距离4像素，斜角穿墙 （由于博客再放例子会原地爆炸，所以直接放总结图了） 二段跳和斜角穿墙一般要求与墙距离4像素，横速度的绝对值≥520 纵向穿墙要求猫的手在墙中，横速度在0左右即可。 如果各位录制视频时有更大的发现，请私信快乐mario TEHH_083：补充一点,纵向穿墙要求速度不能为0，否则会被墙挤出，若要穿右边的墙，速度必须是负的，也不能太大，否则会脱离墙内状态。左边的反之 总而言之有半个身子左右进入墙内就可以了 TAS知识【加速规则】 {横向速度加速规则} 横向加速分为两种，落地加速和（跳起）空中加速 落地加速：0~659 速度时，按方向键1帧 速度+40，如659→699 ——— 660~700→705 ——— 705~793 速度时，按方向键1帧，速度+4，如793→797 ——— 797→800 空中加速：0~500 速度是，按方向键1帧，速度+40，如500→540,速度≥501不再加速。 {横向速度减速规则} 横向减速分为三种，落地空减速，空中减速，落地回撤减速 落地减速（什么也不按）：40~800 速度时，减速-60/帧，可以减速到变方向 ———————– 0~20 速度是，一帧减速到0 落地回撤减速（落地按反方向键）：141~800 减速-100/帧 ————– 0~140 减速-40/帧，变方向以后就视为加速 空中减速（空中按反方向键）：141~800 减速-66/帧 ————– 0~140 减速-40/帧，变方向以后就视为加速 很明显，撞墙减速是最最最快的！800→0也是很简单的 小结：这里我们看到当速度很快时落地回撤加速是最快的，相当于落地减速+反方向落地加速 TAS知识【加速规则】 {纵向速度加速规则} g=100/帧，大家懂了吧~ 纵向速度的取值范围为-1600~1600，默认正为下 普通跳起，第1帧纵速度-1100，然后用g减速直到落地，比如第二帧纵速度就是-1000 普通跳起（小跳）的第三帧为判定帧，如果这帧按下了跳，不管第三帧纵速度如何，第四帧纵速","date":"2019-04-07","objectID":"/catmario-tas/:0:1","series":null,"tags":["tas","catmario","猫里奥","转载"],"title":"CatMario TAS 教程","uri":"/catmario-tas/#本文章转自快乐mario的百度贴吧账号"},{"categories":null,"content":" 本文章转自@快乐mario的百度贴吧账号 首先，打一个TAS至少要具备以下几点要求 有充足的时间 有对电脑操作的基本技巧 有对TAS是什么的认识 有对Catmario的理解与热爱 有一定耐心与恒心 有一个XP系统 具备这一些，打一个TAS就是很简单的事情了。 【注意】这里的几点都是很重要的！最重要的是必须有 [XP] 系统！ 首先，我们要下载一个工具，名字叫Hourglass。这里提供给大家的是Hourglass-r71的汉化版本，我们就用这个来做Catmario的TAS。我们还需要Catmario的游戏文件。请点击下面的地址下载Hourglass模拟器和Catmario游戏，解压缩到合适的地方。 点我下载模拟器以及游戏文件 解压缩后可以看到TAS的文件夹，打开后里面有两个文件夹，一个是Catmario，一个是Hourglass。我们要打开的是Hourglass文件夹里的“模拟器”文件。 打开以后看到这样的画面，按图示操作 然后Hourglass会自动在Hourglass文件夹内创造同名的wtf录像文件，这个录像文件是纪录按键用的，也就是等下你打TAS时每一帧记录按键的文件。 下面以【最速】TAS为例，给大家介绍TAS教程，首先要进行一系列的设置： 选择好“游戏可执行程序”为我们的Catmario游戏以后，点击【运行库】→【区码模拟】→【强制日文区码】，这样可以解决TAS黑屏的问题。 点击【运行库】→【信息同步模式】→【同步】，这样可以解决一些突然退出的问题，但是有时退出也是难免的。 在【每秒帧数】栏中，把【60】帧改为【30】帧，这样可以防止延迟帧（Lag）的出现。 在【系统时间】栏中，把【6000】改为【0】，这样可以方便系统时间的校对。 点击【输入】→【配置快捷键】，找到并点击【单帧步进（第2个）】，查看是否为Space，如果不是Space，点击【设定…】然后按下【空格键】。 这样差不多就可以了，但是如果你在游戏途中（倒着的飞鱼出现时）崩溃（Crash）了，请再选择【声音】→【禁止DirectSound创建】，这样可以解决Crash的问题。（一般情况下不要选择，不然会没有声音） 接下来就是开始录制TAS录像的时候了，先来试验一下，点击【运行并录制新录像】，你会看到Catmario游戏窗口跳出，像往常一样先玩一会吧！ 【注意】有时候腾讯等软件会误报注入信息，请点击更多操作→允许此程序所有操作，如果不注入按键怎么玩游戏啊，这种低级的误报真是奇怪！ 玩的差不多了，点击【停止运行】，然后点击【运行并播放现有录像】，你会发现，你刚刚的所有操作都像是被录下来了一样又回放了一遍！而且是在真正的游戏窗口中回放的哦，这就是因为模拟器把你刚刚所有的按键全部记录到【录像文件】里面去了，而且时间非常的精确，不会有差错哦~ 注意，每次打开Hourglass都要重新设定上面的内容 其实这个软件何止只有这么点功能，他还有很多强大的功能，我们来体验一下。 按【运行并录制新录像】重新录制，一般他会提示是否重复录制[record over]该录像？意思就是你现在重新录制的话，会把之前的按键操作覆盖掉，如果你不希望被覆盖掉，就点击取消，然后给录像文件换一个名字（本来是…\\しょぼんのアクション.wtf，你可以换成速通.wtf或者其他）然后运行并录制新录像。 这时，你可以在任何时候，点击模拟器右边的“暂停”，你会发现，游戏居然停住了！然后，你可以敲击一下空格键，你又会发现，整个游戏只动了一点点！这是因为模拟器把游戏一秒钟的操作分配到了30帧，所以你就可以做很精确的操作了！ 比如这样~ 比如这样~ 厉害吧！还有更厉害的呢，你可以在任何时候按 Shift + 1 来保存一个存档，然后当你玩着玩着突然死了以后，按下 1 ，你会发现：游戏又从你保存的地方开始了！ 【注意】一共有20个存档，0-9 和 F1-F10 ，存档要加Shift，读档不用，9的存档对应F10的读档 【温馨提示】如果你一个录像要录制很多天的话，你可以在任何时候，按【运行并播放现有录像】，按【shift+数字】存档，再点击Hourglass窗口的【读写权限】，然后按【数字】读档就可以继续录制！ 前面展示的就是Hourglass的基本功能：按键记录、加速（快进）与减速、暂停、即时存档与读档（S\\L 大法）而这些基本是普通的游戏不能做到的。 接下来说明一下按键文件转AVI录像的功能，选择【AVI】→【捕捉视频+音频】，然后点击【运行并播放现有录像】，会提示保存AVI录像文件在哪里，选择好以后就开始播放录像，在合适的时候停止运行，你会发现AVI录像文件已经保存好了，帧率都不变，非常高清！但是文件大小比较大，推荐用岛国的软件 TMPGEnc 4.0 压缩，也可以用Winrar或者2345好压打成压缩包~ 前面已经把Hourglass大部分基础的内容讲完了，但是实际上这款模拟器还有一个强大又是必备的功能：内存搜索与监视！内存搜索就不教大家了，这里我把我亲自搜索整理出来的内存值分享给大家。首先点击Hourglass的【工具】→【内存监视】，跳出这样一个框框 在这个框框中按【添加】 打开的窗口中按上图输入地址、注释，选择数据大小后确定 用同样的方法添加以下内容 0060331C 横坐标 00603320 纵坐标 00603330 横速度（-800~800） 00603334 纵速度（-1600~1600） 00603336 上升判定1，下降判定 000603364 踩地判定1，跳起判定0 其实真正打速通的话，我们要用的仅仅是第3个和第4个，有时会用到第6个！添加好这6个内存值后，点击文件→保存，这样下次用模拟器就可以直接打开！ 然后不要关这个内存监视，你再去录一下看看~是不是感觉非常高级！ 好，有了这两个，我们就开始速通录像的录制吧！ 首先当然是调整好帧数和系统时间及其他设置，然后先点击【暂停】，按下【运行并录制新录像】后马上按住Enter！如果你第8帧就进入了黑屏画面，说明一开始你的速度是最快的！ 这时候你就要按住右，然后用空格键步进，确保你开始你就在加速！ 可以看到画面刚出现，你的横速度已经达到了80，这就是TAS方法之一：黑屏加速法！ TAS方法之二：边缘起跳与边缘落脚法如果我们想要让TAS变得更快，那么我们就要让它多加速一会，所以当然要加速到最边缘再起跳！值得一提的是，Catmario的【起跳判定】特别坑，它是计算你z按键的次数，如果是双数的话就可以起跳，如果是单数的话就不能起跳- - （前一帧已经按下z，单数不起跳） （又按了一帧z，双数起跳） 边缘落脚：即使你没有真正踩到地板，由于边缘判定的bug，也会上去！ （啊我要掉下去了~~~） （哇，我竟然跳上来了喵！） TAS方法之三：二段跳、斜角穿墙、纵向穿墙 这应该是Catmario TAS 中最吸引人的部分了！让人无法理解的是，穿墙的判定条件真是奇怪得让人无语：不需要速度快（纵向穿墙），也不需要准确的按键，甚至你根本就不知道哪一个点可以卡墙！！所以，卡墙与穿墙真的是靠运气的事情，下面给大家截取几个样本图： ① 横速度 -709，猫与墙距离4像素，斜角穿墙 ② 横速度 734，猫与墙距离3像素，二段跳 ③ 横速度 717，猫与墙距离4像素，斜角穿墙 ④ 横速度 761，猫与墙距离6像素，斜角穿（隐形砖）墙 ⑤ 横速度 717，猫与墙距离4像素，二段跳 ⑥ 横速度 634，猫与墙距离4像素，二段跳 ⑦ 横速度-534，纵速度800，猫与墙距离4像素，二段跳 ⑧ 横速度800，纵速度633，猫与墙距离4像素，斜角穿墙 （由于博客再放例子会原地爆炸，所以直接放总结图了） 二段跳和斜角穿墙一般要求与墙距离4像素，横速度的绝对值≥520 纵向穿墙要求猫的手在墙中，横速度在0左右即可。 如果各位录制视频时有更大的发现，请私信快乐mario TEHH_083：补充一点,纵向穿墙要求速度不能为0，否则会被墙挤出，若要穿右边的墙，速度必须是负的，也不能太大，否则会脱离墙内状态。左边的反之 总而言之有半个身子左右进入墙内就可以了 TAS知识【加速规则】 {横向速度加速规则} 横向加速分为两种，落地加速和（跳起）空中加速 落地加速：0~659 速度时，按方向键1帧 速度+40，如659→699 ——— 660~700→705 ——— 705~793 速度时，按方向键1帧，速度+4，如793→797 ——— 797→800 空中加速：0~500 速度是，按方向键1帧，速度+40，如500→540,速度≥501不再加速。 {横向速度减速规则} 横向减速分为三种，落地空减速，空中减速，落地回撤减速 落地减速（什么也不按）：40~800 速度时，减速-60/帧，可以减速到变方向 ———————– 0~20 速度是，一帧减速到0 落地回撤减速（落地按反方向键）：141~800 减速-100/帧 ————– 0~140 减速-40/帧，变方向以后就视为加速 空中减速（空中按反方向键）：141~800 减速-66/帧 ————– 0~140 减速-40/帧，变方向以后就视为加速 很明显，撞墙减速是最最最快的！800→0也是很简单的 小结：这里我们看到当速度很快时落地回撤加速是最快的，相当于落地减速+反方向落地加速 TAS知识【加速规则】 {纵向速度加速规则} g=100/帧，大家懂了吧~ 纵向速度的取值范围为-1600~1600，默认正为下 普通跳起，第1帧纵速度-1100，然后用g减速直到落地，比如第二帧纵速度就是-1000 普通跳起（小跳）的第三帧为判定帧，如果这帧按下了跳，不管第三帧纵速度如何，第四帧纵速","date":"2019-04-07","objectID":"/catmario-tas/:0:1","series":null,"tags":["tas","catmario","猫里奥","转载"],"title":"CatMario TAS 教程","uri":"/catmario-tas/#其他的所有吧友问题可以访问网页httpstiebabaiducomp2433434207"},{"categories":null,"content":" About MeLast Updated: 2022/07/27 准初二铁废物, 男, 没用过变声器 个人主页在这里, 多翻翻总能找到你想要的 持续更新 FAQs: 为什么 Hello World 前面还有一篇 CatMario TAS 教程 那篇是从前 Hexo 博客转移过来的 用的是 macOS 吗 Arch Linux 桌面环境: KDE Plasma Blog Logs: Jul 25, 博客第三次 /remake Jul 27, 移除了一些完全无用的文章, 后续会开始恢复文章更新 ","date":"0001-01-01","objectID":"/about/:0:0","series":null,"tags":null,"title":"","uri":"/about/#centerabout-mecenter"},{"categories":null,"content":" 友情链接","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#center友情链接center"},{"categories":null,"content":" 池塘の博客","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpschitang-main-1256617490cosap-shanghaimyqcloudcomimagesavatarwebp-width--35-height--35-altchitang233-池塘の博客httpsblogchitangdevcenter"},{"categories":null,"content":" 倚窗, 听雨","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpsblogcoelacanthusmoeiconpng-width--35-height--35-altayalhw-倚窗-听雨httpsblogcoelacanthusmoecenter"},{"categories":null,"content":" Herschel 的个人站点","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpsavatars3githubusercontentcomu52870917s400v4-width--35-height--35-altherschel-ma-herschel-的个人站点http39101213182center"},{"categories":null,"content":" Jasmine’s Blog","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpsblogdianascyouimgfaviconpng-width--35-height--35-altjasmine-jasmines-bloghttpsblogdianascyoucenter"},{"categories":null,"content":" Purofle 的 Blog","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpsq1qlogocngbqqnk3272912942s640-width--35-height--35-altpurofle-purofle-的-bloghttpsblogarchlinuxtechcenter"},{"categories":null,"content":" BLxcwg666 的博客添加友链 / 更新头像或链接请在此页面下评论 ","date":"0001-01-01","objectID":"/links/:0:0","series":null,"tags":null,"title":"","uri":"/links/#centerimg-srchttpswwwcyznbeuorgimgshead1x2png-width--35-height--35-altblxcwg666s-blog-blxcwg666-的博客httpsblogcyznbeuorgcenter"}]